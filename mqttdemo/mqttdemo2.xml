<?xml-stylesheet href="../xsltforms/xsltforms.xsl" type="text/xsl"?>
<?xsltforms-options debug="no" ?>
<?css-conversion no?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:xf="http://www.w3.org/2002/xforms"
	xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xs="http://www.w3.org/2001/XMLSchema">

	<head>

		<title>MQTT Demo v2</title>
		<link type="text/css" href="mqttdemo.css" rel="stylesheet" />

		<xf:model id="modelid">

			<xf:instance id="connection" xmlns="">
				<data>
					<host>broker.mqttdashboard.com</host>
					<port>8000</port>
					<clientId>xsltforms</clientId>
					<initialtopic>xforms/chat</initialtopic>
					<status>disconnected</status>
					<message></message>
				</data>
			</xf:instance>
			
			<xf:instance id="messagelog" xmlns="">
				<data>
					<event></event>
				</data>
			</xf:instance>

			<xf:bind nodeset="instance('connection')" readonly="status = 'connected'" />

			<xf:action ev:event="mqtt_set_status">
				<xf:setvalue ref="status" value="event('status')" />
				<xf:dispatch name="mqtt_sub_first" targetid="modelid" if="event('status') = 'connected'" />
			    <xf:reset model="modelid" if="event('status') = 'disconnected'" />
			</xf:action>
			
			<xf:action ev:event="mqtt_sub_first">
				<xf:load>
					<xf:resource
						value="concat('javascript:mqttsubfirst(&quot;',initialtopic,'&quot;)')" />
				</xf:load>
			</xf:action>
			
			<xf:action ev:event="mqtt_message_arrived">
				<xf:insert nodeset="instance('messagelog')/event" at="1" position="before" />
				<xf:setvalue ref="instance('messagelog')/event[1]" value="concat(now(),' : ',event('topic'),' : ',event('message'))" />
				<xf:delete nodeset="instance('messagelog')/event[last()]" if="count(instance('messagelog')/event) &gt; 15" />
			</xf:action>
			
			<xf:action ev:event="xforms-ready">
				<xf:setvalue ref="clientId" value="concat('XF',substring(string(random()),12))" />
			</xf:action>
			
		</xf:model>
	</head>
	<body>
		<div class="title">
			<h2>MQTT Demo v2</h2>
		</div>
		<xf:group ref="instance('connection')" navindex="0">

			<xf:input ref='host' incremental='false'>
				<xf:label>Host: </xf:label>
			</xf:input>
			<xf:input ref="port">
				<xf:label>Port: </xf:label>
			</xf:input>
			<xf:input ref="clientId">
				<xf:label>ClientId: </xf:label>
			</xf:input>
			<xf:input ref="status">
				<xf:label>Status: </xf:label>
			</xf:input>
			<xf:trigger id="mqttconnect">
				<xf:label>Connect</xf:label>
				<xf:load ev:event="DOMActivate">
					<xf:resource
						value="concat('javascript:mqttstart(&quot;',host,'&quot;,&quot;',port,'&quot;,&quot;',clientId,'&quot;)')" />
				</xf:load>
			</xf:trigger>
			<xf:trigger id="mqttdisconnect">
				<xf:label>Disconnect</xf:label>
				<xf:load ev:event="DOMActivate">
					<xf:resource
						value="concat('javascript:mqttstop()','')" />
				</xf:load>
			</xf:trigger>

		</xf:group>
		<hr />
		<div id="log">
		<xf:repeat id="results-repeat" nodeset="instance('messagelog')/event">
			<xf:output ref="." />
		</xf:repeat>
		</div>
		
		
		<script src="mqttws31.js"></script>
		<script>
/* Global MQTT client var */ 
var client;

/* Functions called by XForm triggers
 * 
 */

function mqttstart(host,port,clientId) {	
	client = new Messaging.Client(host, Number(port), clientId);
	client.onMessageArrived = onMessageArrived;
	client.onConnectionLost = onConnectionLost;            

	var options = {
		     timeout: 30,
		     onSuccess:onConnect,
		     onFailure:onFailure 
		 };
    client.connect(options);
};

function mqttstop() {
	client.disconnect();
};

function mqttsubfirst(topic) {
	client.subscribe(topic);
};


/* Utility Functions
 * 
 */

/* Call an event on an XForm */
function call_xform_event(xfevent,xfpayload) {
	var model=document.getElementById("modelid")
	   XsltForms_xmlevents.dispatch(model,xfevent, null, null, null, null,xfpayload);
}

/* Callbacks called by MQTT
 * 
 */

function onConnect() {
	call_xform_event("mqtt_set_status",{status:  "connected"});
};

function onFailure() {
	alert('Failed');
};

function onConnectionLost(responseObject) {
	 if (responseObject.errorCode !== 0) {
	        alert(client.clientId + ": " + responseObject.errorCode);
	 } else {
	//We dsconnected	 
		 	call_xform_event("mqtt_set_status",{status:  "disconnected"})
	 }  
};

function onMessageArrived(message) {
  call_xform_event("mqtt_message_arrived",{
    message: message.payloadString,
    topic: message.destinationName
    }); 
};		    
		</script>
	</body>
</html>	
